<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.dgut.dao.CommentDao">
  <resultMap id="BaseResultMap" type="com.example.demo.dgut.model.Comment">
    <id column="commentId" jdbcType="INTEGER" property="commentid" />
    <result column="commentContent" jdbcType="VARCHAR" property="commentcontent" />
    <result column="commentTime" jdbcType="TIMESTAMP" property="commenttime" />
    <result column="userId" jdbcType="INTEGER" property="userid" />
    <result column="articleId" jdbcType="INTEGER" property="articleid" />
    <result column="isPermited" jdbcType="BIT" property="ispermited" />
    <result column="isDeleted" jdbcType="BIT" property="isdeleted" />
  </resultMap>
  <sql id="Base_Column_List">
    commentId, commentContent, commentTime, userId, articleId, isPermited, isDeleted
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from comment
    where commentId = #{commentid,jdbcType=INTEGER}
  </select>
  <select id="getCommentList" resultType="com.example.demo.dgut.model.Comment">
    select * from comment WHERE isDeleted = 0
  </select>
  <select id="getCommentListByQuery" resultType="com.example.demo.dgut.model.Comment">
    select * from comment
    where commentContent like CONCAT('%',#{commentContent,jdbcType=VARCHAR},'%')
  </select>
  <select id="getComment" resultType="com.example.demo.dgut.model.Comment">
    select * from comment
    where articleId = #{articleId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from comment
    where commentId = #{commentid,jdbcType=INTEGER}
  </delete>
  <insert id="saveComment" parameterType="com.example.demo.dgut.model.Comment">
    insert into comment(commentContent, userId, articleId)
    values (#{commentcontent},#{userid},#{articleid})
  </insert>
  <insert id="insert" keyColumn="commentId" keyProperty="commentid" parameterType="com.example.demo.dgut.model.Comment" useGeneratedKeys="true">
    insert into comment (commentContent, commentTime, userId,
      articleId, isPermited, isDeleted
      )
    values (#{commentcontent,jdbcType=VARCHAR}, #{commenttime,jdbcType=TIMESTAMP}, #{userid,jdbcType=INTEGER},
      #{articleid,jdbcType=INTEGER}, #{ispermited,jdbcType=BIT}, #{isdeleted,jdbcType=BIT}
      )
  </insert>
  <insert id="insertSelective" keyColumn="commentId" keyProperty="commentid" parameterType="com.example.demo.dgut.model.Comment" useGeneratedKeys="true">
    insert into comment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="commentcontent != null">
        commentContent,
      </if>
      <if test="commenttime != null">
        commentTime,
      </if>
      <if test="userid != null">
        userId,
      </if>
      <if test="articleid != null">
        articleId,
      </if>
      <if test="ispermited != null">
        isPermited,
      </if>
      <if test="isdeleted != null">
        isDeleted,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="commentcontent != null">
        #{commentcontent,jdbcType=VARCHAR},
      </if>
      <if test="commenttime != null">
        #{commenttime,jdbcType=TIMESTAMP},
      </if>
      <if test="userid != null">
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="articleid != null">
        #{articleid,jdbcType=INTEGER},
      </if>
      <if test="ispermited != null">
        #{ispermited,jdbcType=BIT},
      </if>
      <if test="isdeleted != null">
        #{isdeleted,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.dgut.model.Comment">
    update comment
    <set>
      <if test="commentcontent != null">
        commentContent = #{commentcontent,jdbcType=VARCHAR},
      </if>
      <if test="commenttime != null">
        commentTime = #{commenttime,jdbcType=TIMESTAMP},
      </if>
      <if test="userid != null">
        userId = #{userid,jdbcType=INTEGER},
      </if>
      <if test="articleid != null">
        articleId = #{articleid,jdbcType=INTEGER},
      </if>
      <if test="ispermited != null">
        isPermited = #{ispermited,jdbcType=BIT},
      </if>
      <if test="isdeleted != null">
        isDeleted = #{isdeleted,jdbcType=BIT},
      </if>
    </set>
    where commentId = #{commentid,jdbcType=INTEGER}
  </update>
  <update id="permitComment">
    update comment
    set isPermited = #{isPermited,jdbcType=BIT}
    where commentId = #{commentid,jdbcType=INTEGER}
  </update>
  <update id="deleteComment">
    update comment
    set isDeleted = #{deleteFlag,jdbcType=BIT}
    where commentId = #{commentid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.dgut.model.Comment">
    update comment
    set commentContent = #{commentcontent,jdbcType=VARCHAR},
      commentTime = #{commenttime,jdbcType=TIMESTAMP},
      userId = #{userid,jdbcType=INTEGER},
      articleId = #{articleid,jdbcType=INTEGER},
      isPermited = #{ispermited,jdbcType=BIT},
      isDeleted = #{isdeleted,jdbcType=BIT}
    where commentId = #{commentid,jdbcType=INTEGER}
  </update>
</mapper>
