<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.dgut.dao.UserDao">
  <resultMap id="BaseResultMap" type="com.example.demo.dgut.model.User">
    <id column="userId" jdbcType="INTEGER" property="userid" />
    <result column="userName" jdbcType="VARCHAR" property="username" />
    <result column="userPassword" jdbcType="VARCHAR" property="userpassword" />
    <result column="phoneNum" jdbcType="VARCHAR" property="phonenum" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="userGender" jdbcType="VARCHAR" property="usergender" />
    <result column="userImage" jdbcType="VARCHAR" property="userimage" />
    <result column="isDeleted" jdbcType="BIT" property="isdeleted" />
    <result column="isBanned" jdbcType="BIT" property="isbanned" />
    <result column="isAdmin" jdbcType="BIT" property="isadmin" />
    <result column="registerTime" jdbcType="TIMESTAMP" property="registertime" />
  </resultMap>
  <sql id="Base_Column_List">
    userId, userName, userPassword, phoneNum, email, userGender, userImage, isDeleted,
    isBanned, isAdmin, registerTime
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from user
    where userId = #{userid,jdbcType=INTEGER}
  </select>
  <select id="login" resultType="com.example.demo.dgut.model.User">
    select
    *
    from user
    where userName = #{userName,jdbcType=VARCHAR} and
    userPassword = #{userPassword,jdbcType=VARCHAR}
  </select>
  <select id="loginByPhone" resultType="com.example.demo.dgut.model.User">
    select
    *
    from user
    where phoneNum = #{phoneNum,jdbcType=VARCHAR} and
    userPassword = #{userPassword,jdbcType=VARCHAR}
  </select>
  <select id="getUserList" resultType="com.example.demo.dgut.model.User">
    select * from user WHERE isDeleted = 0
  </select>
  <select id="getUserListByUserName" resultType="com.example.demo.dgut.model.User">
    select * from user
    where userName like CONCAT('%',#{userName,jdbcType=VARCHAR},'%')
  </select>
  <select id="isExistUser" resultType="com.example.demo.dgut.model.User">
    select *
    from user
    where phoneNum = #{phoneNum,jdbcType=VARCHAR}
  </select>
  <select id="getUserInfoDao" resultType="com.example.demo.dgut.model.User">
    select *
    from user
    where userId = #{userid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user
    where userId = #{userid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="userId" keyProperty="userid" parameterType="com.example.demo.dgut.model.User" useGeneratedKeys="true">
    insert into user (userName, userPassword, phoneNum,
      email, userGender, userImage,
      isDeleted, isBanned, isAdmin, registerTime
      )
    values (#{username,jdbcType=VARCHAR}, #{userpassword,jdbcType=VARCHAR}, #{phonenum,jdbcType=VARCHAR},
      #{email,jdbcType=VARCHAR}, #{usergender,jdbcType=VARCHAR}, #{userimage,jdbcType=VARCHAR},
      #{isdeleted,jdbcType=BIT}, #{isbanned,jdbcType=BIT}, #{isadmin,jdbcType=BIT}, #{registertime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="register" parameterType="com.example.demo.dgut.model.User">
    insert into user(username,userpassword,phonenum,email,usergender)
    values (#{username},#{userpassword},#{phonenum},#{email},#{usergender})
  </insert>
  <insert id="insertSelective" keyColumn="userId" keyProperty="userid" parameterType="com.example.demo.dgut.model.User" useGeneratedKeys="true">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="username != null">
        userName,
      </if>
      <if test="userpassword != null">
        userPassword,
      </if>
      <if test="phonenum != null">
        phoneNum,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="usergender != null">
        userGender,
      </if>
      <if test="userimage != null">
        userImage,
      </if>
      <if test="isdeleted != null">
        isDeleted,
      </if>
      <if test="isbanned != null">
        isBanned,
      </if>
      <if test="isadmin != null">
        isAdmin,
      </if>
      <if test="registertime != null">
        registerTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="userpassword != null">
        #{userpassword,jdbcType=VARCHAR},
      </if>
      <if test="phonenum != null">
        #{phonenum,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="usergender != null">
        #{usergender,jdbcType=VARCHAR},
      </if>
      <if test="userimage != null">
        #{userimage,jdbcType=VARCHAR},
      </if>
      <if test="isdeleted != null">
        #{isdeleted,jdbcType=BIT},
      </if>
      <if test="isbanned != null">
        #{isbanned,jdbcType=BIT},
      </if>
      <if test="isadmin != null">
        #{isadmin,jdbcType=BIT},
      </if>
      <if test="registertime != null">
        #{registertime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="changePassword">
    update user
    set userPassword = #{userPassword,jdbcType=VARCHAR}
    where userId = #{userId,jdbcType=INTEGER}
  </update>
  <update id="permitUser">
    update user
    set isBanned = #{isPermited,jdbcType=BIT}
    where userId = #{userId,jdbcType=INTEGER}
  </update>
  <update id="setUserInfo">
    update user
    set userPassword = #{userpassword,jdbcType=VARCHAR}, userName = #{username,jdbcType=VARCHAR},
    phoneNum = #{phonenum,jdbcType=VARCHAR}, email = #{email,jdbcType=VARCHAR},
    userGender = #{usergender,jdbcType=VARCHAR}, userImage = #{userimage,jdbcType=VARCHAR}
    where userId = #{userid,jdbcType=INTEGER}
  </update>
  <update id="resetPassword">
    update user
    set userPassword = #{userPassword,jdbcType=VARCHAR}
    where phoneNum = #{phoneNum,jdbcType=VARCHAR}
  </update>
  <update id="upLoadUserImageDao">
    update user
    set userImage = #{userImage,jdbcType=VARCHAR}
    where userId = #{userId,jdbcType=INTEGER}
  </update>
  <update id="deleteUserByUserId">
    update user
    set isDeleted = #{isDeleted,jdbcType=VARCHAR}
    where userId = #{userId,jdbcType=INTEGER}
  </update>
  <update id="settingAdmin">
    update user
    set isAdmin = #{isAdmin,jdbcType=VARCHAR}
    where userId = #{userId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.dgut.model.User">
    update user
    <set>
      <if test="username != null">
        userName = #{username,jdbcType=VARCHAR},
      </if>
      <if test="userpassword != null">
        userPassword = #{userpassword,jdbcType=VARCHAR},
      </if>
      <if test="phonenum != null">
        phoneNum = #{phonenum,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="usergender != null">
        userGender = #{usergender,jdbcType=VARCHAR},
      </if>
      <if test="userimage != null">
        userImage = #{userimage,jdbcType=VARCHAR},
      </if>
      <if test="isdeleted != null">
        isDeleted = #{isdeleted,jdbcType=BIT},
      </if>
      <if test="isbanned != null">
        isBanned = #{isbanned,jdbcType=BIT},
      </if>
      <if test="isadmin != null">
        isAdmin = #{isadmin,jdbcType=BIT},
      </if>
      <if test="registertime != null">
        registerTime = #{registertime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where userId = #{userid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.dgut.model.User">
    update user
    set userName = #{username,jdbcType=VARCHAR},
      userPassword = #{userpassword,jdbcType=VARCHAR},
      phoneNum = #{phonenum,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      userGender = #{usergender,jdbcType=VARCHAR},
      userImage = #{userimage,jdbcType=VARCHAR},
      isDeleted = #{isdeleted,jdbcType=BIT},
      isBanned = #{isbanned,jdbcType=BIT},
      isAdmin = #{isadmin,jdbcType=BIT},
      registerTime = #{registertime,jdbcType=TIMESTAMP}
    where userId = #{userid,jdbcType=INTEGER}
  </update>
</mapper>
